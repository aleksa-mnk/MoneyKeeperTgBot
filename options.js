const isEmpty = (obj) => {
    for (let key in obj) {
        return false
    }
    return true
}

const defaultOpts = {
    parse_mode: 'HTML',
    reply_markup: {
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [[`–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ \u2795`, "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ \u2796"], ["–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å \u{1F911}", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ \u{1F4CA}"]]
    }
}
const rateOpts = {
    parse_mode: 'HTML',
    reply_markup: {
        // inline_keyboard: [[{ text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Å—Ç–∞–ª—å–Ω–æ–µ \u{1F9D0}", callback_data: "all_currency" }]],
        keyboard: [[`–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ \u2795`, "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ \u2796"], ["–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å \u{1F911}", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ \u{1F4CA}"]]
    }
}

const settingsOpts = {
    parse_mode: 'HTML',
    reply_markup: {
        inline_keyboard: [[{ text: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ üëÄ", url: "https://telegra.ph/MoneyKeeper---Instrukciya-01-08" }],
        [{ text: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚úçÔ∏è", callback_data: "toMe" }]
        ]
    }
}

const startOpts = {
    parse_mode: 'HTML',
    reply_markup: {
        inline_keyboard: [
            [{ text: "–•–æ—á—É —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è", url: "https://telegra.ph/MoneyKeeper---Instrukciya-01-08" }],
            [{ text: "üöÄ –î–∞–≤–∞–π!", callback_data: "start" }]
        ]
    }
}

const categoryOpts = (userCategoryList) => {
    return ({
        parse_mode: 'HTML',
        reply_markup: {
            resize_keyboard: true,
            one_time_keyboard: true,
            keyboard: userCategoryList
        }
    })
}

const deletecategoryOpts = (userCategoryList) => {
    return ({
        parse_mode: 'HTML',
        reply_markup: {
            resize_keyboard: true,
            one_time_keyboard: true,
            keyboard: userCategoryList
        }
    })
}

const renamecategoryOpts = (userCategoryList) => {
    return ({
        parse_mode: 'HTML',
        reply_markup: {
            resize_keyboard: true,
            one_time_keyboard: true,
            keyboard: userCategoryList
        }
    })
}

const statisticOpts = {
    parse_mode: 'HTML',
    reply_markup: {
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [["–î–µ–Ω—å", "–ù–µ–¥–µ–ª—è"], ["–ú–µ—Å—è—Ü", "–ì–æ–¥"], ["–í—Å—ë –≤—Ä–µ–º—è"], ["–û—Ç–º–µ–Ω–∞"]]
    }
}

module.exports = {
    defaultOpts,
    rateOpts,
    settingsOpts,
    startOpts,
    categoryOpts,
    statisticOpts,
    deletecategoryOpts,
    renamecategoryOpts,
    isEmpty,
}